// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Calendar.proto

package com.dylan.CalendarService;

public final class Calendar {
  private Calendar() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string location = 2;</code>
     * @return The location.
     */
    java.lang.String getLocation();
    /**
     * <code>string location = 2;</code>
     * @return The bytes for location.
     */
    com.google.protobuf.ByteString
        getLocationBytes();

    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     * @return Whether the date field is set.
     */
    boolean hasDate();
    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     * @return The date.
     */
    com.google.protobuf.Timestamp getDate();
    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getDateOrBuilder();
  }
  /**
   * Protobuf type {@code Event}
   */
  public static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Event)
      EventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      name_ = "";
      location_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Event();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              location_ = s;
              break;
            }
            case 26: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (date_ != null) {
                subBuilder = date_.toBuilder();
              }
              date_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(date_);
                date_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dylan.CalendarService.Calendar.internal_static_Event_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dylan.CalendarService.Calendar.internal_static_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dylan.CalendarService.Calendar.Event.class, com.dylan.CalendarService.Calendar.Event.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private volatile java.lang.Object location_;
    /**
     * <code>string location = 2;</code>
     * @return The location.
     */
    @java.lang.Override
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      }
    }
    /**
     * <code>string location = 2;</code>
     * @return The bytes for location.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATE_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp date_;
    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     * @return Whether the date field is set.
     */
    @java.lang.Override
    public boolean hasDate() {
      return date_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     * @return The date.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getDate() {
      return date_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : date_;
    }
    /**
     * <code>.google.protobuf.Timestamp date = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getDateOrBuilder() {
      return getDate();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, location_);
      }
      if (date_ != null) {
        output.writeMessage(3, getDate());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, location_);
      }
      if (date_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dylan.CalendarService.Calendar.Event)) {
        return super.equals(obj);
      }
      com.dylan.CalendarService.Calendar.Event other = (com.dylan.CalendarService.Calendar.Event) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getLocation()
          .equals(other.getLocation())) return false;
      if (hasDate() != other.hasDate()) return false;
      if (hasDate()) {
        if (!getDate()
            .equals(other.getDate())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
      if (hasDate()) {
        hash = (37 * hash) + DATE_FIELD_NUMBER;
        hash = (53 * hash) + getDate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dylan.CalendarService.Calendar.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Event)
        com.dylan.CalendarService.Calendar.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dylan.CalendarService.Calendar.internal_static_Event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dylan.CalendarService.Calendar.internal_static_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dylan.CalendarService.Calendar.Event.class, com.dylan.CalendarService.Calendar.Event.Builder.class);
      }

      // Construct using com.dylan.CalendarService.Calendar.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        location_ = "";

        if (dateBuilder_ == null) {
          date_ = null;
        } else {
          date_ = null;
          dateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dylan.CalendarService.Calendar.internal_static_Event_descriptor;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Event getDefaultInstanceForType() {
        return com.dylan.CalendarService.Calendar.Event.getDefaultInstance();
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Event build() {
        com.dylan.CalendarService.Calendar.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Event buildPartial() {
        com.dylan.CalendarService.Calendar.Event result = new com.dylan.CalendarService.Calendar.Event(this);
        result.name_ = name_;
        result.location_ = location_;
        if (dateBuilder_ == null) {
          result.date_ = date_;
        } else {
          result.date_ = dateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dylan.CalendarService.Calendar.Event) {
          return mergeFrom((com.dylan.CalendarService.Calendar.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dylan.CalendarService.Calendar.Event other) {
        if (other == com.dylan.CalendarService.Calendar.Event.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getLocation().isEmpty()) {
          location_ = other.location_;
          onChanged();
        }
        if (other.hasDate()) {
          mergeDate(other.getDate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dylan.CalendarService.Calendar.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dylan.CalendarService.Calendar.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object location_ = "";
      /**
       * <code>string location = 2;</code>
       * @return The location.
       */
      public java.lang.String getLocation() {
        java.lang.Object ref = location_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          location_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string location = 2;</code>
       * @return The bytes for location.
       */
      public com.google.protobuf.ByteString
          getLocationBytes() {
        java.lang.Object ref = location_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          location_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string location = 2;</code>
       * @param value The location to set.
       * @return This builder for chaining.
       */
      public Builder setLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        location_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string location = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocation() {
        
        location_ = getDefaultInstance().getLocation();
        onChanged();
        return this;
      }
      /**
       * <code>string location = 2;</code>
       * @param value The bytes for location to set.
       * @return This builder for chaining.
       */
      public Builder setLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        location_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp date_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> dateBuilder_;
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       * @return Whether the date field is set.
       */
      public boolean hasDate() {
        return dateBuilder_ != null || date_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       * @return The date.
       */
      public com.google.protobuf.Timestamp getDate() {
        if (dateBuilder_ == null) {
          return date_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : date_;
        } else {
          return dateBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public Builder setDate(com.google.protobuf.Timestamp value) {
        if (dateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          date_ = value;
          onChanged();
        } else {
          dateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public Builder setDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (dateBuilder_ == null) {
          date_ = builderForValue.build();
          onChanged();
        } else {
          dateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public Builder mergeDate(com.google.protobuf.Timestamp value) {
        if (dateBuilder_ == null) {
          if (date_ != null) {
            date_ =
              com.google.protobuf.Timestamp.newBuilder(date_).mergeFrom(value).buildPartial();
          } else {
            date_ = value;
          }
          onChanged();
        } else {
          dateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public Builder clearDate() {
        if (dateBuilder_ == null) {
          date_ = null;
          onChanged();
        } else {
          date_ = null;
          dateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getDateBuilder() {
        
        onChanged();
        return getDateFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getDateOrBuilder() {
        if (dateBuilder_ != null) {
          return dateBuilder_.getMessageOrBuilder();
        } else {
          return date_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : date_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp date = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getDateFieldBuilder() {
        if (dateBuilder_ == null) {
          dateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getDate(),
                  getParentForChildren(),
                  isClean());
          date_ = null;
        }
        return dateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Event)
    }

    // @@protoc_insertion_point(class_scope:Event)
    private static final com.dylan.CalendarService.Calendar.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dylan.CalendarService.Calendar.Event();
    }

    public static com.dylan.CalendarService.Calendar.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      @java.lang.Override
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dylan.CalendarService.Calendar.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Events)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Event events = 1;</code>
     */
    java.util.List<com.dylan.CalendarService.Calendar.Event> 
        getEventsList();
    /**
     * <code>repeated .Event events = 1;</code>
     */
    com.dylan.CalendarService.Calendar.Event getEvents(int index);
    /**
     * <code>repeated .Event events = 1;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .Event events = 1;</code>
     */
    java.util.List<? extends com.dylan.CalendarService.Calendar.EventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <code>repeated .Event events = 1;</code>
     */
    com.dylan.CalendarService.Calendar.EventOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Events}
   */
  public static final class Events extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Events)
      EventsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Events.newBuilder() to construct.
    private Events(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Events() {
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Events();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Events(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                events_ = new java.util.ArrayList<com.dylan.CalendarService.Calendar.Event>();
                mutable_bitField0_ |= 0x00000001;
              }
              events_.add(
                  input.readMessage(com.dylan.CalendarService.Calendar.Event.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dylan.CalendarService.Calendar.internal_static_Events_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dylan.CalendarService.Calendar.internal_static_Events_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dylan.CalendarService.Calendar.Events.class, com.dylan.CalendarService.Calendar.Events.Builder.class);
    }

    public static final int EVENTS_FIELD_NUMBER = 1;
    private java.util.List<com.dylan.CalendarService.Calendar.Event> events_;
    /**
     * <code>repeated .Event events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.dylan.CalendarService.Calendar.Event> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .Event events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.dylan.CalendarService.Calendar.EventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .Event events = 1;</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .Event events = 1;</code>
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.Event getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .Event events = 1;</code>
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.EventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(1, events_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, events_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dylan.CalendarService.Calendar.Events)) {
        return super.equals(obj);
      }
      com.dylan.CalendarService.Calendar.Events other = (com.dylan.CalendarService.Calendar.Events) obj;

      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Events parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Events parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.Events parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dylan.CalendarService.Calendar.Events prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Events}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Events)
        com.dylan.CalendarService.Calendar.EventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dylan.CalendarService.Calendar.internal_static_Events_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dylan.CalendarService.Calendar.internal_static_Events_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dylan.CalendarService.Calendar.Events.class, com.dylan.CalendarService.Calendar.Events.Builder.class);
      }

      // Construct using com.dylan.CalendarService.Calendar.Events.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dylan.CalendarService.Calendar.internal_static_Events_descriptor;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Events getDefaultInstanceForType() {
        return com.dylan.CalendarService.Calendar.Events.getDefaultInstance();
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Events build() {
        com.dylan.CalendarService.Calendar.Events result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.Events buildPartial() {
        com.dylan.CalendarService.Calendar.Events result = new com.dylan.CalendarService.Calendar.Events(this);
        int from_bitField0_ = bitField0_;
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dylan.CalendarService.Calendar.Events) {
          return mergeFrom((com.dylan.CalendarService.Calendar.Events)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dylan.CalendarService.Calendar.Events other) {
        if (other == com.dylan.CalendarService.Calendar.Events.getDefaultInstance()) return this;
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dylan.CalendarService.Calendar.Events parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dylan.CalendarService.Calendar.Events) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.dylan.CalendarService.Calendar.Event> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          events_ = new java.util.ArrayList<com.dylan.CalendarService.Calendar.Event>(events_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .Event events = 1;</code>
       */
      public java.util.List<com.dylan.CalendarService.Calendar.Event> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Event getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder setEvents(
          int index, com.dylan.CalendarService.Calendar.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder setEvents(
          int index, com.dylan.CalendarService.Calendar.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder addEvents(com.dylan.CalendarService.Calendar.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder addEvents(
          int index, com.dylan.CalendarService.Calendar.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder addEvents(
          com.dylan.CalendarService.Calendar.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder addEvents(
          int index, com.dylan.CalendarService.Calendar.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends com.dylan.CalendarService.Calendar.Event> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Event.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.EventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public java.util.List<? extends com.dylan.CalendarService.Calendar.EventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Event.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            com.dylan.CalendarService.Calendar.Event.getDefaultInstance());
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Event.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, com.dylan.CalendarService.Calendar.Event.getDefaultInstance());
      }
      /**
       * <code>repeated .Event events = 1;</code>
       */
      public java.util.List<com.dylan.CalendarService.Calendar.Event.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Events)
    }

    // @@protoc_insertion_point(class_scope:Events)
    private static final com.dylan.CalendarService.Calendar.Events DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dylan.CalendarService.Calendar.Events();
    }

    public static com.dylan.CalendarService.Calendar.Events getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Events>
        PARSER = new com.google.protobuf.AbstractParser<Events>() {
      @java.lang.Override
      public Events parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Events(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Events> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Events> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dylan.CalendarService.Calendar.Events getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EventsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string authCode = 1;</code>
     * @return The authCode.
     */
    java.lang.String getAuthCode();
    /**
     * <code>string authCode = 1;</code>
     * @return The bytes for authCode.
     */
    com.google.protobuf.ByteString
        getAuthCodeBytes();
  }
  /**
   * Protobuf type {@code EventsRequest}
   */
  public static final class EventsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EventsRequest)
      EventsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventsRequest.newBuilder() to construct.
    private EventsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventsRequest() {
      authCode_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventsRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              authCode_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dylan.CalendarService.Calendar.internal_static_EventsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dylan.CalendarService.Calendar.internal_static_EventsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dylan.CalendarService.Calendar.EventsRequest.class, com.dylan.CalendarService.Calendar.EventsRequest.Builder.class);
    }

    public static final int AUTHCODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object authCode_;
    /**
     * <code>string authCode = 1;</code>
     * @return The authCode.
     */
    @java.lang.Override
    public java.lang.String getAuthCode() {
      java.lang.Object ref = authCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authCode_ = s;
        return s;
      }
    }
    /**
     * <code>string authCode = 1;</code>
     * @return The bytes for authCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAuthCodeBytes() {
      java.lang.Object ref = authCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAuthCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authCode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAuthCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dylan.CalendarService.Calendar.EventsRequest)) {
        return super.equals(obj);
      }
      com.dylan.CalendarService.Calendar.EventsRequest other = (com.dylan.CalendarService.Calendar.EventsRequest) obj;

      if (!getAuthCode()
          .equals(other.getAuthCode())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTHCODE_FIELD_NUMBER;
      hash = (53 * hash) + getAuthCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dylan.CalendarService.Calendar.EventsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EventsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EventsRequest)
        com.dylan.CalendarService.Calendar.EventsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dylan.CalendarService.Calendar.EventsRequest.class, com.dylan.CalendarService.Calendar.EventsRequest.Builder.class);
      }

      // Construct using com.dylan.CalendarService.Calendar.EventsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        authCode_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsRequest_descriptor;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsRequest getDefaultInstanceForType() {
        return com.dylan.CalendarService.Calendar.EventsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsRequest build() {
        com.dylan.CalendarService.Calendar.EventsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsRequest buildPartial() {
        com.dylan.CalendarService.Calendar.EventsRequest result = new com.dylan.CalendarService.Calendar.EventsRequest(this);
        result.authCode_ = authCode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dylan.CalendarService.Calendar.EventsRequest) {
          return mergeFrom((com.dylan.CalendarService.Calendar.EventsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dylan.CalendarService.Calendar.EventsRequest other) {
        if (other == com.dylan.CalendarService.Calendar.EventsRequest.getDefaultInstance()) return this;
        if (!other.getAuthCode().isEmpty()) {
          authCode_ = other.authCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dylan.CalendarService.Calendar.EventsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dylan.CalendarService.Calendar.EventsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object authCode_ = "";
      /**
       * <code>string authCode = 1;</code>
       * @return The authCode.
       */
      public java.lang.String getAuthCode() {
        java.lang.Object ref = authCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string authCode = 1;</code>
       * @return The bytes for authCode.
       */
      public com.google.protobuf.ByteString
          getAuthCodeBytes() {
        java.lang.Object ref = authCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string authCode = 1;</code>
       * @param value The authCode to set.
       * @return This builder for chaining.
       */
      public Builder setAuthCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        authCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string authCode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthCode() {
        
        authCode_ = getDefaultInstance().getAuthCode();
        onChanged();
        return this;
      }
      /**
       * <code>string authCode = 1;</code>
       * @param value The bytes for authCode to set.
       * @return This builder for chaining.
       */
      public Builder setAuthCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        authCode_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EventsRequest)
    }

    // @@protoc_insertion_point(class_scope:EventsRequest)
    private static final com.dylan.CalendarService.Calendar.EventsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dylan.CalendarService.Calendar.EventsRequest();
    }

    public static com.dylan.CalendarService.Calendar.EventsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventsRequest>
        PARSER = new com.google.protobuf.AbstractParser<EventsRequest>() {
      @java.lang.Override
      public EventsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dylan.CalendarService.Calendar.EventsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EventsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Events events = 1;</code>
     * @return Whether the events field is set.
     */
    boolean hasEvents();
    /**
     * <code>.Events events = 1;</code>
     * @return The events.
     */
    com.dylan.CalendarService.Calendar.Events getEvents();
    /**
     * <code>.Events events = 1;</code>
     */
    com.dylan.CalendarService.Calendar.EventsOrBuilder getEventsOrBuilder();
  }
  /**
   * Protobuf type {@code EventsResponse}
   */
  public static final class EventsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EventsResponse)
      EventsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventsResponse.newBuilder() to construct.
    private EventsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventsResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventsResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.dylan.CalendarService.Calendar.Events.Builder subBuilder = null;
              if (events_ != null) {
                subBuilder = events_.toBuilder();
              }
              events_ = input.readMessage(com.dylan.CalendarService.Calendar.Events.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(events_);
                events_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dylan.CalendarService.Calendar.internal_static_EventsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dylan.CalendarService.Calendar.internal_static_EventsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dylan.CalendarService.Calendar.EventsResponse.class, com.dylan.CalendarService.Calendar.EventsResponse.Builder.class);
    }

    public static final int EVENTS_FIELD_NUMBER = 1;
    private com.dylan.CalendarService.Calendar.Events events_;
    /**
     * <code>.Events events = 1;</code>
     * @return Whether the events field is set.
     */
    @java.lang.Override
    public boolean hasEvents() {
      return events_ != null;
    }
    /**
     * <code>.Events events = 1;</code>
     * @return The events.
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.Events getEvents() {
      return events_ == null ? com.dylan.CalendarService.Calendar.Events.getDefaultInstance() : events_;
    }
    /**
     * <code>.Events events = 1;</code>
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.EventsOrBuilder getEventsOrBuilder() {
      return getEvents();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (events_ != null) {
        output.writeMessage(1, getEvents());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (events_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEvents());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dylan.CalendarService.Calendar.EventsResponse)) {
        return super.equals(obj);
      }
      com.dylan.CalendarService.Calendar.EventsResponse other = (com.dylan.CalendarService.Calendar.EventsResponse) obj;

      if (hasEvents() != other.hasEvents()) return false;
      if (hasEvents()) {
        if (!getEvents()
            .equals(other.getEvents())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEvents()) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEvents().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.EventsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dylan.CalendarService.Calendar.EventsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EventsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EventsResponse)
        com.dylan.CalendarService.Calendar.EventsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dylan.CalendarService.Calendar.EventsResponse.class, com.dylan.CalendarService.Calendar.EventsResponse.Builder.class);
      }

      // Construct using com.dylan.CalendarService.Calendar.EventsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventsBuilder_ == null) {
          events_ = null;
        } else {
          events_ = null;
          eventsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dylan.CalendarService.Calendar.internal_static_EventsResponse_descriptor;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsResponse getDefaultInstanceForType() {
        return com.dylan.CalendarService.Calendar.EventsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsResponse build() {
        com.dylan.CalendarService.Calendar.EventsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.EventsResponse buildPartial() {
        com.dylan.CalendarService.Calendar.EventsResponse result = new com.dylan.CalendarService.Calendar.EventsResponse(this);
        if (eventsBuilder_ == null) {
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dylan.CalendarService.Calendar.EventsResponse) {
          return mergeFrom((com.dylan.CalendarService.Calendar.EventsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dylan.CalendarService.Calendar.EventsResponse other) {
        if (other == com.dylan.CalendarService.Calendar.EventsResponse.getDefaultInstance()) return this;
        if (other.hasEvents()) {
          mergeEvents(other.getEvents());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dylan.CalendarService.Calendar.EventsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dylan.CalendarService.Calendar.EventsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.dylan.CalendarService.Calendar.Events events_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Events, com.dylan.CalendarService.Calendar.Events.Builder, com.dylan.CalendarService.Calendar.EventsOrBuilder> eventsBuilder_;
      /**
       * <code>.Events events = 1;</code>
       * @return Whether the events field is set.
       */
      public boolean hasEvents() {
        return eventsBuilder_ != null || events_ != null;
      }
      /**
       * <code>.Events events = 1;</code>
       * @return The events.
       */
      public com.dylan.CalendarService.Calendar.Events getEvents() {
        if (eventsBuilder_ == null) {
          return events_ == null ? com.dylan.CalendarService.Calendar.Events.getDefaultInstance() : events_;
        } else {
          return eventsBuilder_.getMessage();
        }
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public Builder setEvents(com.dylan.CalendarService.Calendar.Events value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          events_ = value;
          onChanged();
        } else {
          eventsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public Builder setEvents(
          com.dylan.CalendarService.Calendar.Events.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          events_ = builderForValue.build();
          onChanged();
        } else {
          eventsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public Builder mergeEvents(com.dylan.CalendarService.Calendar.Events value) {
        if (eventsBuilder_ == null) {
          if (events_ != null) {
            events_ =
              com.dylan.CalendarService.Calendar.Events.newBuilder(events_).mergeFrom(value).buildPartial();
          } else {
            events_ = value;
          }
          onChanged();
        } else {
          eventsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = null;
          onChanged();
        } else {
          events_ = null;
          eventsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Events.Builder getEventsBuilder() {
        
        onChanged();
        return getEventsFieldBuilder().getBuilder();
      }
      /**
       * <code>.Events events = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.EventsOrBuilder getEventsOrBuilder() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilder();
        } else {
          return events_ == null ?
              com.dylan.CalendarService.Calendar.Events.getDefaultInstance() : events_;
        }
      }
      /**
       * <code>.Events events = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Events, com.dylan.CalendarService.Calendar.Events.Builder, com.dylan.CalendarService.Calendar.EventsOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.dylan.CalendarService.Calendar.Events, com.dylan.CalendarService.Calendar.Events.Builder, com.dylan.CalendarService.Calendar.EventsOrBuilder>(
                  getEvents(),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EventsResponse)
    }

    // @@protoc_insertion_point(class_scope:EventsResponse)
    private static final com.dylan.CalendarService.Calendar.EventsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dylan.CalendarService.Calendar.EventsResponse();
    }

    public static com.dylan.CalendarService.Calendar.EventsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventsResponse>
        PARSER = new com.google.protobuf.AbstractParser<EventsResponse>() {
      @java.lang.Override
      public EventsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dylan.CalendarService.Calendar.EventsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MarkEventRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MarkEventRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Event event = 1;</code>
     * @return Whether the event field is set.
     */
    boolean hasEvent();
    /**
     * <code>.Event event = 1;</code>
     * @return The event.
     */
    com.dylan.CalendarService.Calendar.Event getEvent();
    /**
     * <code>.Event event = 1;</code>
     */
    com.dylan.CalendarService.Calendar.EventOrBuilder getEventOrBuilder();
  }
  /**
   * Protobuf type {@code MarkEventRequest}
   */
  public static final class MarkEventRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MarkEventRequest)
      MarkEventRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MarkEventRequest.newBuilder() to construct.
    private MarkEventRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MarkEventRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MarkEventRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MarkEventRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.dylan.CalendarService.Calendar.Event.Builder subBuilder = null;
              if (event_ != null) {
                subBuilder = event_.toBuilder();
              }
              event_ = input.readMessage(com.dylan.CalendarService.Calendar.Event.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(event_);
                event_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dylan.CalendarService.Calendar.internal_static_MarkEventRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dylan.CalendarService.Calendar.internal_static_MarkEventRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dylan.CalendarService.Calendar.MarkEventRequest.class, com.dylan.CalendarService.Calendar.MarkEventRequest.Builder.class);
    }

    public static final int EVENT_FIELD_NUMBER = 1;
    private com.dylan.CalendarService.Calendar.Event event_;
    /**
     * <code>.Event event = 1;</code>
     * @return Whether the event field is set.
     */
    @java.lang.Override
    public boolean hasEvent() {
      return event_ != null;
    }
    /**
     * <code>.Event event = 1;</code>
     * @return The event.
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.Event getEvent() {
      return event_ == null ? com.dylan.CalendarService.Calendar.Event.getDefaultInstance() : event_;
    }
    /**
     * <code>.Event event = 1;</code>
     */
    @java.lang.Override
    public com.dylan.CalendarService.Calendar.EventOrBuilder getEventOrBuilder() {
      return getEvent();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (event_ != null) {
        output.writeMessage(1, getEvent());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (event_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEvent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dylan.CalendarService.Calendar.MarkEventRequest)) {
        return super.equals(obj);
      }
      com.dylan.CalendarService.Calendar.MarkEventRequest other = (com.dylan.CalendarService.Calendar.MarkEventRequest) obj;

      if (hasEvent() != other.hasEvent()) return false;
      if (hasEvent()) {
        if (!getEvent()
            .equals(other.getEvent())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEvent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dylan.CalendarService.Calendar.MarkEventRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dylan.CalendarService.Calendar.MarkEventRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MarkEventRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MarkEventRequest)
        com.dylan.CalendarService.Calendar.MarkEventRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dylan.CalendarService.Calendar.internal_static_MarkEventRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dylan.CalendarService.Calendar.internal_static_MarkEventRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dylan.CalendarService.Calendar.MarkEventRequest.class, com.dylan.CalendarService.Calendar.MarkEventRequest.Builder.class);
      }

      // Construct using com.dylan.CalendarService.Calendar.MarkEventRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventBuilder_ == null) {
          event_ = null;
        } else {
          event_ = null;
          eventBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dylan.CalendarService.Calendar.internal_static_MarkEventRequest_descriptor;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.MarkEventRequest getDefaultInstanceForType() {
        return com.dylan.CalendarService.Calendar.MarkEventRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.MarkEventRequest build() {
        com.dylan.CalendarService.Calendar.MarkEventRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dylan.CalendarService.Calendar.MarkEventRequest buildPartial() {
        com.dylan.CalendarService.Calendar.MarkEventRequest result = new com.dylan.CalendarService.Calendar.MarkEventRequest(this);
        if (eventBuilder_ == null) {
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dylan.CalendarService.Calendar.MarkEventRequest) {
          return mergeFrom((com.dylan.CalendarService.Calendar.MarkEventRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dylan.CalendarService.Calendar.MarkEventRequest other) {
        if (other == com.dylan.CalendarService.Calendar.MarkEventRequest.getDefaultInstance()) return this;
        if (other.hasEvent()) {
          mergeEvent(other.getEvent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dylan.CalendarService.Calendar.MarkEventRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dylan.CalendarService.Calendar.MarkEventRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.dylan.CalendarService.Calendar.Event event_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder> eventBuilder_;
      /**
       * <code>.Event event = 1;</code>
       * @return Whether the event field is set.
       */
      public boolean hasEvent() {
        return eventBuilder_ != null || event_ != null;
      }
      /**
       * <code>.Event event = 1;</code>
       * @return The event.
       */
      public com.dylan.CalendarService.Calendar.Event getEvent() {
        if (eventBuilder_ == null) {
          return event_ == null ? com.dylan.CalendarService.Calendar.Event.getDefaultInstance() : event_;
        } else {
          return eventBuilder_.getMessage();
        }
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public Builder setEvent(com.dylan.CalendarService.Calendar.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          eventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public Builder setEvent(
          com.dylan.CalendarService.Calendar.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          eventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public Builder mergeEvent(com.dylan.CalendarService.Calendar.Event value) {
        if (eventBuilder_ == null) {
          if (event_ != null) {
            event_ =
              com.dylan.CalendarService.Calendar.Event.newBuilder(event_).mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          eventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = null;
          onChanged();
        } else {
          event_ = null;
          eventBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.Event.Builder getEventBuilder() {
        
        onChanged();
        return getEventFieldBuilder().getBuilder();
      }
      /**
       * <code>.Event event = 1;</code>
       */
      public com.dylan.CalendarService.Calendar.EventOrBuilder getEventOrBuilder() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilder();
        } else {
          return event_ == null ?
              com.dylan.CalendarService.Calendar.Event.getDefaultInstance() : event_;
        }
      }
      /**
       * <code>.Event event = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.dylan.CalendarService.Calendar.Event, com.dylan.CalendarService.Calendar.Event.Builder, com.dylan.CalendarService.Calendar.EventOrBuilder>(
                  getEvent(),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MarkEventRequest)
    }

    // @@protoc_insertion_point(class_scope:MarkEventRequest)
    private static final com.dylan.CalendarService.Calendar.MarkEventRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dylan.CalendarService.Calendar.MarkEventRequest();
    }

    public static com.dylan.CalendarService.Calendar.MarkEventRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MarkEventRequest>
        PARSER = new com.google.protobuf.AbstractParser<MarkEventRequest>() {
      @java.lang.Override
      public MarkEventRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarkEventRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MarkEventRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MarkEventRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dylan.CalendarService.Calendar.MarkEventRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Events_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Events_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EventsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EventsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EventsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EventsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MarkEventRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MarkEventRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Calendar.proto\032\033google/protobuf/empty." +
      "proto\032\037google/protobuf/timestamp.proto\"Q" +
      "\n\005Event\022\014\n\004name\030\001 \001(\t\022\020\n\010location\030\002 \001(\t\022" +
      "(\n\004date\030\003 \001(\0132\032.google.protobuf.Timestam" +
      "p\" \n\006Events\022\026\n\006events\030\001 \003(\0132\006.Event\"!\n\rE" +
      "ventsRequest\022\020\n\010authCode\030\001 \001(\t\")\n\016Events" +
      "Response\022\027\n\006events\030\001 \001(\0132\007.Events\")\n\020Mar" +
      "kEventRequest\022\025\n\005event\030\001 \001(\0132\006.Event2t\n\017" +
      "CalendarService\022)\n\016RetrieveEvents\022\016.Even" +
      "tsRequest\032\007.Events\0226\n\tMarkEvent\022\021.MarkEv" +
      "entRequest\032\026.google.protobuf.EmptyB\033\n\031co" +
      "m.dylan.CalendarServiceb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_Event_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Event_descriptor,
        new java.lang.String[] { "Name", "Location", "Date", });
    internal_static_Events_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Events_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Events_descriptor,
        new java.lang.String[] { "Events", });
    internal_static_EventsRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_EventsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EventsRequest_descriptor,
        new java.lang.String[] { "AuthCode", });
    internal_static_EventsResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_EventsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EventsResponse_descriptor,
        new java.lang.String[] { "Events", });
    internal_static_MarkEventRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_MarkEventRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MarkEventRequest_descriptor,
        new java.lang.String[] { "Event", });
    com.google.protobuf.EmptyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
